name: GlobalActions.GUI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build:

    strategy:
      matrix:
        targetplatform: [x64]

    runs-on: windows-latest

    env:
      Project_Path: GlobalActions.GUI\GlobalActions.GUI.csproj
      Project_Dir: GlobalActions.GUI

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Use Nerdbank.GitVersioning to set version variables
      uses: aarnott/nbgv@master
      with:
        setAllVars: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Publish application
      run: dotnet publish ${{ env.Project_Path }} -c Release -o ${{ env.Project_Dir}}\publish -p:PublishSingleFile=true -r win-x64

    - name: Create archive
      run: Compress-Archive -Path ${{ env.Project_Dir }}\publish\* -DestinationPath Release-${{ env.Project_Dir }}.zip

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ env.NBGV_Version }}${{ env.NBGV_PrereleaseVersion }}
        release_name: ${{ env.NBGV_Version }}${{ env.NBGV_PrereleaseVersion }}
        draft: false
        prerelease: false

    - name: Update release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Release-${{ env.Project_Dir }}.zip
        asset_name: Release-${{ env.Project_Dir }}.zip
        asset_content_type: application/zip
